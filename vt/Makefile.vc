# Visual C++ & Intel(R) NMakefile for PDCurses library - Windows VT-like VC++ 2.0+
#
# Usage: nmake -f [path\]Makefile.vc [DEBUG=] [DLL=] [WIDE=] [UTF8=]
#           [ICC=] [CHTYPE_32=] [IX86=] [target]
#
# where target can be any of:
# [all|demos|pdcurses.lib|testcurs.exe...]
#  CHTYPE_## is used to override the default 64-bit chtypes in favor
#  of "traditional" 32- or 16-bit chtypes.  (Untested for VT)
#  IX86 is used to build 32-bit code instead of 64-bit
#  ICC is used to invoke Intel (R) tools icl.exe and xilink.exe,  instead of
#    MS tools cl.exe and link.exe

O = obj
E = .exe
RM = del

!ifndef PDCURSES_SRCDIR
PDCURSES_SRCDIR = ..
!endif

!ifdef IX86
PLATFORM=IX86
!else
PLATFORM=X64
!endif

osdir		= $(PDCURSES_SRCDIR)\vt
common		= $(PDCURSES_SRCDIR)\common

!include $(PDCURSES_SRCDIR)\version.mif
!include $(common)\libobjs.mif

PDCURSES_WIN_H	= $(osdir)\pdcvt.h

!ifdef DEBUG
CFLAGS		= -Z7 -DPDCDEBUG
LDFLAGS		= -debug -pdb:none
!else
CFLAGS		= -O1
LDFLAGS		=
!endif

CFLAGS		= $(CFLAGS) -W3 -D_CRT_SECURE_NO_WARNINGS

!ifdef WIDE
WIDEOPT		= -DPDC_WIDE
!endif

!ifdef UTF8
UTF8OPT		= -DPDC_FORCE_UTF8
!endif

!ifdef CHTYPE_32
CHTYPE_FLAGS= -DCHTYPE_32
!endif

!ifdef ICC
CC			= icl.exe -nologo
LINK		= link.exe -nologo
!else
CC			= cl.exe -nologo
LINK		= link.exe -nologo
!endif
SHL_LD		= $(LINK) $(LDFLAGS) -dll -machine:$(PLATFORM) -out:pdcurses.dll

CCLIBS		= user32.lib advapi32.lib
# may need to add msvcrt for older compilers
#CCLIBS		= msvcrt.lib user32.lib advapi32.lib

LIBEXE		= lib -nologo

LIBCURSES	= pdcurses.lib
CURSESDLL	= pdcurses.dll

!ifdef DLL
DLLOPT		= -DPDC_DLL_BUILD
PDCLIBS		= $(CURSESDLL)
!else
PDCLIBS		= $(LIBCURSES)
!endif

BUILD		= $(CC) -I$(PDCURSES_SRCDIR) -c $(CFLAGS) $(CHTYPE_FLAGS) $(DLLOPT) \
$(WIDEOPT) $(UTF8OPT)

all:	$(PDCLIBS)

clean:
	-$(RM) *.obj
	-$(RM) *.lib
	-$(RM) *.exe
	-$(RM) *.dll
	-$(RM) *.exp
	-$(RM) *.res

demos:	$(PDCLIBS) $(DEMOS)

DEMOOBJS = $(DEMOS:.exe=.obj) tui.obj

$(LIBOBJS) $(PDCOBJS) : $(PDCURSES_HEADERS)
$(PDCOBJS) : $(PDCURSES_WIN_H)
$(DEMOOBJS) : $(PDCURSES_CURSES_H)
$(DEMOS) : $(LIBCURSES)
panel.obj : $(PANEL_HEADER)

!ifndef DLL
$(LIBCURSES) : $(LIBOBJS) $(PDCOBJS)
	$(LIBEXE) -out:$@ $(LIBOBJS) $(PDCOBJS)
!endif

$(CURSESDLL) : $(LIBOBJS) $(PDCOBJS) pdcurses.obj
	$(SHL_LD) $(LIBOBJS) $(PDCOBJS) pdcurses.obj $(CCLIBS)

pdcurses.res pdcurses.obj: $(common)\pdcurses.rc
	rc -r -fopdcurses.res $(common)\pdcurses.rc
	cvtres -machine:$(PLATFORM) -nologo -out:pdcurses.obj pdcurses.res

{$(srcdir)\}.c{}.obj::
	$(BUILD) $<

{$(osdir)\}.c{}.obj::
	$(BUILD) $<

{$(demodir)\}.c{}.obj::
	$(BUILD) $<

.obj.exe:
	$(LINK) $(LDFLAGS) $< $(LIBCURSES) $(CCLIBS)

tuidemo.exe: tuidemo.obj tui.obj
	$(LINK) $(LDFLAGS) $*.obj tui.obj $(LIBCURSES) $(CCLIBS)

tui.obj: $(demodir)\tui.c $(demodir)\tui.h
	$(BUILD) -I$(demodir) $(demodir)\tui.c

tuidemo.obj: $(demodir)\tuidemo.c
	$(BUILD) -I$(demodir) $(demodir)\tuidemo.c

PLATFORM1 = Visual C++
PLATFORM2 = Microsoft Visual C/C++ for Windows VT
ARCNAME = pdc$(VER)_vc_vt

!include $(PDCURSES_SRCDIR)\makedist.mif
