
set(PRODUCT_FILE_DESCRIPTION "Public Domain Curses")
set(PRODUCT_INTERNAL_NAME "PDCurses - ${PROJECT_NAME}")
set(PRODUCT_COMPANY_COPYRIGHT "Public Domain")
set(PRODUCT_NAME "Public Domain Curses Library")
set(PRODUCT_ORIGINAL_FILENAME "PDCURSES.DLL")
set(PRODUCT_ICON "pdcurses.ico")

MESSAGE(STATUS "**** ${PROJECT_NAME} ****")
MESSAGE(STATUS "Installation Path = ${CMAKE_INSTALL_PREFIX}")
MESSAGE(STATUS "PDC_DLL_BUILD = ${PDC_DLL_BUILD}")
MESSAGE(STATUS "PDC_UTF8 = ${PDC_UTF8}")
MESSAGE(STATUS "PDC_WIDE = ${PDC_WIDE}")
MESSAGE(STATUS "PDCDEBUG = ${PDCDEBUG}")
MESSAGE(STATUS "PDC_CHTYPE_32 = ${PDC_CHTYPE_32}")
MESSAGE(STATUS "PDC_CHTYPE_16 = ${PDC_CHTYPE_16}")

set(PROJECT_VERSION_REVISION 0)
set(PRODUCT_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})
set(PRODUCT_VERSION_MINOR ${PROJECT_VERSION_MINOR})
set(PRODUCT_VERSION_PATCH ${PROJECT_VERSION_PATCH})
set(PRODUCT_VERSION_BUILD ${PROJECT_VERSION_REVISION})

set(FILE_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})
set(FILE_VERSION_MINOR ${PROJECT_VERSION_MINOR})
set(FILE_VERSION_PATCH ${PROJECT_VERSION_PATCH})
set(FILE_VERSION_BUILD ${PROJECT_VERSION_REVISION})

set(PDCURSES_SRCDIR ${CMAKE_SOURCE_DIR})
set(PDCURSES_DIST ${CMAKE_INSTALL_PREFIX}/${PROJECT_NAME})

set(osdir ${PDCURSES_SRCDIR}/${PROJECT_NAME})
set(srcdir ${PDCURSES_SRCDIR}/pdcurses)
set (demodir ${PDCURSES_SRCDIR}/demos)

configure_file ( ${CMAKE_SOURCE_DIR}/cmake/version.in.cmake ${CMAKE_CURRENT_BINARY_DIR}/version.rc @ONLY )
configure_file ( ${CMAKE_SOURCE_DIR}/cmake/resource.in.cmake ${CMAKE_CURRENT_BINARY_DIR}/resource.h @ONLY )

IF (MSVC)
    ADD_DEFINITIONS(-D_WIN32 -D_CRT_SECURE_NO_WARNINGS)
    set(WINDOWS_KIT_UM_LIBS 
        gdi32.lib 
        winspool.lib 
        shell32.lib 
        ole32.lib 
        comdlg32.lib 
        advapi32.lib
        )
    set(WINDOWS_KIT_UM_SDL2_LIBS 
        version.lib 
        winmm.lib
        imm32.lib
        )
ELSEIF (CYGWIN)
    set(WINDOWS_KIT_UM_LIBS 
        ${WINDOWS_KIT_LIBRARY_DIR}/gdi32.lib
        ${WINDOWS_KIT_LIBRARY_DIR}/winspool.lib
        ${WINDOWS_KIT_LIBRARY_DIR}/shell32.lib
        ${WINDOWS_KIT_LIBRARY_DIR}/ole32.lib
        ${WINDOWS_KIT_LIBRARY_DIR}/comdlg32.lib
        ${WINDOWS_KIT_LIBRARY_DIR}/advapi32.lib
        )
    set(WINDOWS_KIT_UM_SDL2_LIBS
        ${WINDOWS_KIT_LIBRARY_DIR}/version.lib
        ${WINDOWS_KIT_LIBRARY_DIR}/winmm.lib
        ${WINDOWS_KIT_LIBRARY_DIR}/imm32.lib
        )
ENDIF ()

IF (PDC_DLL_BUILD)
    ADD_DEFINITIONS(-DPDC_DLL_BUILD)
ENDIF (PDC_DLL_BUILD)
IF (PDC_WIDE)
    ADD_DEFINITIONS(-DPDC_WIDE)
ENDIF(PDC_WIDE)
IF (PDC_UTF8)
    ADD_DEFINITIONS(-DPDC_FORCE_UTF8)
ENDIF (PDC_UTF8)
IF (PDC_CHTYPE_16)
    ADD_DEFINITIONS(-DCHTYPE_16)
ENDIF (PDC_CHTYPE_16)
IF (PDC_CHTYPE_32)
    ADD_DEFINITIONS(-DCHTYPE_32)
ENDIF (PDC_CHTYPE_32)
IF (CMAKE_BUILD_TYPE STREQUAL "Debug")
    ADD_DEFINITIONS(-D_DEBUG)
ENDIF ()
IF(PDCDEBUG)
    ADD_DEFINITIONS(-DPDCDEBUG)
ENDIF(PDCDEBUG)
IF(PDC_HAVE_VSNPRINTF)
    ADD_DEFINITIONS(-DHAVE_VSNPRINTF)
ENDIF(PDC_HAVE_VSNPRINTF)
IF(PDC_HAVE_VSSCANF)
    ADD_DEFINITIONS(-DHAVE_VSSCANF)
ENDIF(PDC_HAVE_VSSCANF)
